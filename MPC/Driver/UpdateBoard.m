function [Positions Time] = UpdateBoard(Input)
 coder.extrinsic('crane3d_usb2_get');
 coder.extrinsic('crane3d_usb2_set');
%  addpath('C:\MatlabForCrane\toolbox\crane3d\io_access')
 coder.extrinsic('gettime')
persistent isinitialized
persistent ret
persistent startTime
persistent scaleCoefficients
if isempty(isinitialized)
    scaleCoefficients = [5.81573e-005 5.81573e-005 2.21503e-005 0.001534 0.001534];
    % scaleCoefficients = [5.81573e-005 0.0015 2.21503e-005 0.001534 0.001534]
    startTime = gettime;
% addpath('C:\MatlabForCrane\toolbox\crane3d')
    ret = struct(...
    'Status', 0, ...
    'BitstreamVersion', 1026, ...
    'LogicDate', 538116376, ...
    'ApplicationName', 'Crane ', ...
    'SerialNumber', 0, ...
    'CN1Direction', 2244607, ...
    'CN1Output', 0, ...
    'CN1Input', 2238739, ...
    'EncoderCounter', [0 0 12959 3 10], ...
    'EncoderReset', [0 0 0 0 0], ...
    'EncoderAutoReset', [1 1 1], ...
    'PWMWidth', [0 0 0], ...
    'PWMPrescaler', 60, ...
    'RailLimit', [0 0 0], ...
    'RailLimitFlag', [1 1 1], ...
    'RailLimitSwitch', [0 0 1], ...
    'ThermStatus', [1 1 1], ...
    'ThermFlag', [1 1 1], ...
    'TmrCntCounter', 2.8928e+09, ...
    'TmrCntReset', 0);
    isinitialized = 1;
end
    coder.extrinsic('crane3dcrane3d_usb2_get');
%     coder.extrinsic('gettime')
    ret = (crane3d_usb2_get());
    gettime
    encoderCounter = ret.EncoderCounter;
    Positions = encoderCounter.*scaleCoefficients;
%     ThermState = any([ret.ThermStatus, ret.ThermFlag] == 0);
    PWM = ret.PWMWidth;
%     Time = (gettime-startTime)/1000;
     ret.PWMWidth = Input;
     coder.extrinsic('crane3dcrane3d_usb2_set');
     status = 0;
     status = crane3d_usb2_set(ret);

    Time = 0;
    Time = gettime;
end
